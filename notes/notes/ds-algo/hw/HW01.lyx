#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass llncs
\begin_preamble
\usepackage{ctex}
\end_preamble
\use_default_options true
\begin_modules
algorithm2e
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "showlines=true,showstringspaces=false,basicstyle={\ttfamily}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
1.
 C语言回顾
\end_layout

\begin_layout Author
Problem Selected by Guangwei Zhang
\end_layout

\begin_layout Institute
Department of Computer Science
\end_layout

\begin_layout Section
基础回顾
\end_layout

\begin_layout Subsection*
变量, 作用域
\end_layout

\begin_layout Standard
[C]全局变量和局部变量有什么区别? 如何获取一个变量的地址? 多取几个分配在栈(stack)上和在堆(heap)上的变量的地址, 看看有没有什么规律.
\end_layout

\begin_layout Section
探究与研讨
\end_layout

\begin_layout Subsection*
指向自己的指针
\end_layout

\begin_layout Standard
[C] 创建一个包含一个指针元素的结构体, 使得它指向自己.
 
\end_layout

\begin_layout Subsection*
使用调试器
\end_layout

\begin_layout Standard
[C] 说明如下的代码为何会崩溃.
 然后使用调试模式看一看会有怎样的反馈.
 
\end_layout

\begin_layout Standard
代码是: 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

int x = *(int *)(0x0);
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
负数下标的元素
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename figs/neg-index.png
	width 70line%

\end_inset


\end_layout

\begin_layout Standard
曾经有人``提出''了如下的方法, 使得C程序数组可以负数索引.
 
\end_layout

\begin_layout Itemize
创建两个一模一样大的数组, 比如
\begin_inset Formula $\texttt{a[N],b[N]}$
\end_inset


\end_layout

\begin_layout Itemize
然后, 在
\begin_inset Formula $\texttt{b[N]}$
\end_inset

中就可以访问一定程度的负数下标了.
 
\end_layout

\begin_layout Standard
请回答: 
\end_layout

\begin_layout Itemize
为什么某些情况下可以访问负数下标?
\end_layout

\begin_layout Itemize
在开启了编译优化后, 这种情况有时候将会失败.
 原因是聪明的编译器发现
\begin_inset Formula $\texttt{a}$
\end_inset

没有用之后就会把它抹除掉.
 这样就会产生数组越界, 而这是未定义行为.
 
\end_layout

\begin_layout Itemize
说说下面的程序有没有数组越界这一未定义行为:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

int arr[10];
\end_layout

\begin_layout Plain Layout

int *p = &arr[2];
\end_layout

\begin_layout Plain Layout

int x = p[-2];
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\align center

\emph on
\color red
请不要这样写程序! 这里仅仅用作原理的探讨.
\end_layout

\end_body
\end_document
